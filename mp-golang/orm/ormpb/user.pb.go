// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package ormpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	//uint32 id = 1;
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Role                 string   `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
	Password             string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Profile              string   `protobuf:"bytes,5,opt,name=profile,proto3" json:"profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetProfile() string {
	if m != nil {
		return m.Profile
	}
	return ""
}

type UserId struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserId) Reset()         { *m = UserId{} }
func (m *UserId) String() string { return proto.CompactTextString(m) }
func (*UserId) ProtoMessage()    {}
func (*UserId) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *UserId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserId.Unmarshal(m, b)
}
func (m *UserId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserId.Marshal(b, m, deterministic)
}
func (m *UserId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserId.Merge(m, src)
}
func (m *UserId) XXX_Size() int {
	return xxx_messageInfo_UserId.Size(m)
}
func (m *UserId) XXX_DiscardUnknown() {
	xxx_messageInfo_UserId.DiscardUnknown(m)
}

var xxx_messageInfo_UserId proto.InternalMessageInfo

func (m *UserId) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type UserList struct {
	Limit                uint32   `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               uint32   `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserList) Reset()         { *m = UserList{} }
func (m *UserList) String() string { return proto.CompactTextString(m) }
func (*UserList) ProtoMessage()    {}
func (*UserList) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}

func (m *UserList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserList.Unmarshal(m, b)
}
func (m *UserList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserList.Marshal(b, m, deterministic)
}
func (m *UserList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserList.Merge(m, src)
}
func (m *UserList) XXX_Size() int {
	return xxx_messageInfo_UserList.Size(m)
}
func (m *UserList) XXX_DiscardUnknown() {
	xxx_messageInfo_UserList.DiscardUnknown(m)
}

var xxx_messageInfo_UserList proto.InternalMessageInfo

func (m *UserList) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *UserList) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type UserCreate struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserCreate) Reset()         { *m = UserCreate{} }
func (m *UserCreate) String() string { return proto.CompactTextString(m) }
func (*UserCreate) ProtoMessage()    {}
func (*UserCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{3}
}

func (m *UserCreate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserCreate.Unmarshal(m, b)
}
func (m *UserCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserCreate.Marshal(b, m, deterministic)
}
func (m *UserCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserCreate.Merge(m, src)
}
func (m *UserCreate) XXX_Size() int {
	return xxx_messageInfo_UserCreate.Size(m)
}
func (m *UserCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_UserCreate.DiscardUnknown(m)
}

var xxx_messageInfo_UserCreate proto.InternalMessageInfo

func (m *UserCreate) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type UserUpdate struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data                 string   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserUpdate) Reset()         { *m = UserUpdate{} }
func (m *UserUpdate) String() string { return proto.CompactTextString(m) }
func (*UserUpdate) ProtoMessage()    {}
func (*UserUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{4}
}

func (m *UserUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserUpdate.Unmarshal(m, b)
}
func (m *UserUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserUpdate.Marshal(b, m, deterministic)
}
func (m *UserUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserUpdate.Merge(m, src)
}
func (m *UserUpdate) XXX_Size() int {
	return xxx_messageInfo_UserUpdate.Size(m)
}
func (m *UserUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_UserUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_UserUpdate proto.InternalMessageInfo

func (m *UserUpdate) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserUpdate) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type UserDelete struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserDelete) Reset()         { *m = UserDelete{} }
func (m *UserDelete) String() string { return proto.CompactTextString(m) }
func (*UserDelete) ProtoMessage()    {}
func (*UserDelete) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{5}
}

func (m *UserDelete) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserDelete.Unmarshal(m, b)
}
func (m *UserDelete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserDelete.Marshal(b, m, deterministic)
}
func (m *UserDelete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserDelete.Merge(m, src)
}
func (m *UserDelete) XXX_Size() int {
	return xxx_messageInfo_UserDelete.Size(m)
}
func (m *UserDelete) XXX_DiscardUnknown() {
	xxx_messageInfo_UserDelete.DiscardUnknown(m)
}

var xxx_messageInfo_UserDelete proto.InternalMessageInfo

func (m *UserDelete) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type UserResponse struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserResponse) Reset()         { *m = UserResponse{} }
func (m *UserResponse) String() string { return proto.CompactTextString(m) }
func (*UserResponse) ProtoMessage()    {}
func (*UserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{6}
}

func (m *UserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserResponse.Unmarshal(m, b)
}
func (m *UserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserResponse.Marshal(b, m, deterministic)
}
func (m *UserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserResponse.Merge(m, src)
}
func (m *UserResponse) XXX_Size() int {
	return xxx_messageInfo_UserResponse.Size(m)
}
func (m *UserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserResponse proto.InternalMessageInfo

func (m *UserResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "ormpb.User")
	proto.RegisterType((*UserId)(nil), "ormpb.UserId")
	proto.RegisterType((*UserList)(nil), "ormpb.UserList")
	proto.RegisterType((*UserCreate)(nil), "ormpb.UserCreate")
	proto.RegisterType((*UserUpdate)(nil), "ormpb.UserUpdate")
	proto.RegisterType((*UserDelete)(nil), "ormpb.UserDelete")
	proto.RegisterType((*UserResponse)(nil), "ormpb.UserResponse")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 333 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xc1, 0x4f, 0x32, 0x31,
	0x10, 0xc5, 0x3f, 0x96, 0x65, 0xe1, 0x1b, 0x45, 0x63, 0x35, 0xa6, 0x21, 0x1e, 0x48, 0x0f, 0xc6,
	0x83, 0x59, 0x0d, 0x5e, 0x3c, 0x23, 0x17, 0x12, 0x4f, 0x6b, 0xb8, 0x78, 0x5b, 0xec, 0x90, 0x34,
	0xe9, 0xd2, 0x4d, 0x5b, 0x34, 0x7a, 0xf6, 0x0f, 0x37, 0xd3, 0x2e, 0x64, 0xd5, 0xe0, 0x6d, 0xde,
	0xcc, 0xfb, 0x31, 0xc3, 0xdb, 0x02, 0x6c, 0x1c, 0xda, 0xbc, 0xb6, 0xc6, 0x1b, 0xd6, 0x33, 0xb6,
	0xaa, 0x97, 0xe2, 0x03, 0xd2, 0x85, 0x43, 0xcb, 0x18, 0xa4, 0xeb, 0xb2, 0x42, 0xde, 0x19, 0x77,
	0xae, 0xfe, 0x17, 0xa1, 0x66, 0x67, 0xd0, 0xc3, 0xaa, 0x54, 0x9a, 0x27, 0xa1, 0x19, 0x05, 0x39,
	0xad, 0xd1, 0xc8, 0xbb, 0xd1, 0x49, 0x35, 0x1b, 0xc1, 0xa0, 0x2e, 0x9d, 0x7b, 0x33, 0x56, 0xf2,
	0x34, 0xf4, 0x77, 0x9a, 0x71, 0xe8, 0xd7, 0xd6, 0xac, 0x94, 0x46, 0xde, 0x0b, 0xa3, 0xad, 0x14,
	0x1c, 0x32, 0xda, 0x3d, 0x97, 0xec, 0x08, 0x12, 0x25, 0xc3, 0xee, 0x61, 0x91, 0x28, 0x29, 0xee,
	0x61, 0x40, 0x93, 0x47, 0xe5, 0x3c, 0x5d, 0xa1, 0x55, 0xa5, 0x7c, 0x33, 0x8e, 0x82, 0x9d, 0x43,
	0x66, 0x56, 0x2b, 0x87, 0x3e, 0x1c, 0x37, 0x2c, 0x1a, 0x25, 0xc6, 0x00, 0x44, 0x3e, 0x58, 0x2c,
	0x3d, 0xd2, 0xad, 0xb2, 0xf4, 0xe5, 0xf6, 0x5f, 0x51, 0x2d, 0x6e, 0xa3, 0x63, 0x51, 0x4b, 0x72,
	0xfc, 0xd8, 0xbc, 0x23, 0x92, 0x16, 0x71, 0x11, 0x89, 0x19, 0x6a, 0xfc, 0x4d, 0x88, 0x4b, 0x38,
	0xa4, 0x69, 0x81, 0xae, 0x36, 0x6b, 0x87, 0x74, 0x99, 0x45, 0xb7, 0xd1, 0xbe, 0xd9, 0xda, 0xa8,
	0xc9, 0x67, 0x02, 0x07, 0x64, 0x7c, 0x42, 0xfb, 0xaa, 0x5e, 0x90, 0x5d, 0x43, 0x3a, 0x7d, 0x9f,
	0x4b, 0x36, 0xcc, 0xc3, 0x97, 0xc8, 0x63, 0x14, 0xa3, 0xd3, 0x96, 0xdc, 0xfe, 0xa6, 0xf8, 0xc7,
	0x72, 0x48, 0x43, 0x1a, 0xc7, 0xad, 0x31, 0x35, 0xf6, 0xf9, 0x27, 0x90, 0x35, 0x19, 0x9c, 0xb4,
	0x0c, 0xb1, 0xf5, 0x07, 0xd3, 0xa4, 0xd2, 0x66, 0x62, 0x6b, 0x1f, 0x73, 0x03, 0xdd, 0x19, 0xea,
	0x6f, 0x40, 0xcc, 0x69, 0x0f, 0x30, 0xed, 0x3f, 0xc7, 0x97, 0xb7, 0xcc, 0xc2, 0x3b, 0xbc, 0xfb,
	0x0a, 0x00, 0x00, 0xff, 0xff, 0x9e, 0x53, 0x14, 0xcf, 0x95, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	//
	ById(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*UserResponse, error)
	List(ctx context.Context, in *UserList, opts ...grpc.CallOption) (*UserResponse, error)
	Create(ctx context.Context, in *UserCreate, opts ...grpc.CallOption) (*UserResponse, error)
	Update(ctx context.Context, in *UserUpdate, opts ...grpc.CallOption) (*UserResponse, error)
	Del(ctx context.Context, in *UserDelete, opts ...grpc.CallOption) (*UserResponse, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) ById(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := c.cc.Invoke(ctx, "/ormpb.UserService/ById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) List(ctx context.Context, in *UserList, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := c.cc.Invoke(ctx, "/ormpb.UserService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Create(ctx context.Context, in *UserCreate, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := c.cc.Invoke(ctx, "/ormpb.UserService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Update(ctx context.Context, in *UserUpdate, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := c.cc.Invoke(ctx, "/ormpb.UserService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Del(ctx context.Context, in *UserDelete, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := c.cc.Invoke(ctx, "/ormpb.UserService/Del", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	//
	ById(context.Context, *UserId) (*UserResponse, error)
	List(context.Context, *UserList) (*UserResponse, error)
	Create(context.Context, *UserCreate) (*UserResponse, error)
	Update(context.Context, *UserUpdate) (*UserResponse, error)
	Del(context.Context, *UserDelete) (*UserResponse, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_ById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ormpb.UserService/ById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ById(ctx, req.(*UserId))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ormpb.UserService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).List(ctx, req.(*UserList))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ormpb.UserService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Create(ctx, req.(*UserCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserUpdate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ormpb.UserService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Update(ctx, req.(*UserUpdate))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Del_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserDelete)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Del(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ormpb.UserService/Del",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Del(ctx, req.(*UserDelete))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ormpb.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ById",
			Handler:    _UserService_ById_Handler,
		},
		{
			MethodName: "List",
			Handler:    _UserService_List_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _UserService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _UserService_Update_Handler,
		},
		{
			MethodName: "Del",
			Handler:    _UserService_Del_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}
